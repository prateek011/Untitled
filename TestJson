import com.fasterxml.jackson.core.JsonPointer;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.IntNode;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.databind.node.TextNode;




final ObjectMapper mapper = new ObjectMapper();
		ObjectNode rootNode = mapper.createObjectNode();

		JsonUtil.setJsonPointerValue(rootNode, JsonPointer.compile("/root/array/0/name"), new TextNode("John"));
		JsonUtil.setJsonPointerValue(rootNode, JsonPointer.compile("/root/array/0/age"), new IntNode(17));
		JsonUtil.setJsonPointerValue(rootNode, JsonPointer.compile("/root/array/4"), new IntNode(12));
		JsonUtil.setJsonPointerValue(rootNode, JsonPointer.compile("/root/object/num"), new IntNode(81));
		JsonUtil.setJsonPointerValue(rootNode, JsonPointer.compile("/root/object/str"), new TextNode("text"));
		JsonUtil.setJsonPointerValue(rootNode, JsonPointer.compile("/descr"), new TextNode("description"));

		System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(rootNode));
		


import org.apache.commons.lang3.StringUtils;

import com.fasterxml.jackson.core.JsonPointer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ArrayNode;
import com.fasterxml.jackson.databind.node.ObjectNode;
    
    
    private static final ObjectMapper mapper = new ObjectMapper();

	public static void setJsonPointerValue(ObjectNode node, JsonPointer pointer, JsonNode value) {
	    JsonPointer parentPointer = pointer.head();
	    JsonNode parentNode = node.at(parentPointer);
	    String fieldName = pointer.last().toString().substring(1);

	    if (parentNode.isMissingNode() || parentNode.isNull()) {
	        parentNode = StringUtils.isNumeric(fieldName) ? mapper.createArrayNode() : mapper.createObjectNode();
	        setJsonPointerValue(node,parentPointer, parentNode); // recursively reconstruct hierarchy
	    }

	    if (parentNode.isArray()) {
	        ArrayNode arrayNode = (ArrayNode) parentNode;
	        int index = Integer.valueOf(fieldName);
	        // expand array in case index is greater than array size (like JavaScript does)
	        for (int i = arrayNode.size(); i <= index; i++) {
	            arrayNode.addNull();
	        }
	        arrayNode.set(index, value);
	    } else if (parentNode.isObject()) {
	        ((ObjectNode) parentNode).set(fieldName, value);
	    } else {
	        throw new IllegalArgumentException("`" + fieldName + "` can't be set for parent node `"
	                + parentPointer + "` because parent is not a container but " + parentNode.getNodeType().name());
	    }
	}
